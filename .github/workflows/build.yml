name: Build UF2 Files

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: buildjet-4vcpu-ubuntu-2204
    strategy:
      fail-fast: false
      matrix:
        platform:
          - rp2040
          - rp2350

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Install dependencies
        run: sudo apt update && sudo apt install gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential libzopfli-dev

      - name: Clone pico-sdk
        uses: actions/checkout@v4
        with:
          repository: raspberrypi/pico-sdk
          ref: 2.1.1
          path: pico-sdk
          clean: false
          submodules: 'true'

      - name: Clone FreeRTOS-Kernel
        uses: actions/checkout@v4
        with:
          repository: raspberrypi/FreeRTOS-Kernel
          path: FreeRTOS-Kernel
          clean: false
          submodules: 'true'

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: PICO_PLATFORM=${{ matrix.platform }} PICO_SDK_PATH=$GITHUB_WORKSPACE/pico-sdk FREERTOS_KERNEL_PATH=$GITHUB_WORKSPACE/FreeRTOS-Kernel cmake $GITHUB_WORKSPACE

      - uses: ammaraskar/gcc-problem-matcher@master

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: PICO_SDK_PATH=$GITHUB_WORKSPACE/pico-sdk FREERTOS_KERNEL_PATH=$GITHUB_WORKSPACE/FreeRTOS-Kernel cmake --build . --config $BUILD_TYPE --parallel 4

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: creature-joystick-${{ matrix.platform }}
          path: ${{github.workspace}}/build/*.uf2
